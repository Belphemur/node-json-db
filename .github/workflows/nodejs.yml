name: NodeJs
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{secrets.NPM_TOKEN }}
  NODEJS: "lts/*"
  YARN_CACHE: "yarn-cache"

on:
  push:
    branches: [ develop, master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ develop, master ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['lts/-1', 'lts/*', 'current' ]
    steps:
        - uses: actions/checkout@v4
        - name: Set yarn cache
          run: yarn config set cache-folder ${{env.YARN_CACHE}}
        - name: Cache node modules
          uses: actions/cache@v4
          env:
            cache-name: yarn
          with:
            path: ${{env.YARN_CACHE}}
            key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
        - name: Setup Node.js ${{ matrix.node }}
          uses: actions/setup-node@v4.0.2
          with:
            node-version: ${{ matrix.node }}
        - name: Install dependencies
          run: yarn install --frozen-lockfile --ignore-engines
        - name: Run tests
          run: yarn test
        - name: Upload code coverage
          uses: codecov/codecov-action@v4
          with:
            token: ${{ secrets.CODECOV_TOKEN }} 
            fail_ci_if_error: true # optional (default = false)
  ci-cd-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set yarn cache
        run: yarn config set cache-folder ${{env.YARN_CACHE}}
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: yarn
        with:
          path: ${{env.YARN_CACHE}}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Setup Node.js ${{env.NODEJS}}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{env.NODEJS}}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run semantic-release
        run: yarn semantic-release --dry-run
  deploy-pages:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set yarn cache
        run: yarn config set cache-folder ${{env.YARN_CACHE}}
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{env.NODEJS}}
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: yarn
        with:
          path: ${{env.YARN_CACHE}}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install semantic-release dependencies
        run: yarn install --frozen-lockfile
      - name: Build package
        run: yarn build:doc
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.6.1
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: docs # The folder the action should deploy.
            
  release:
    needs: [build, ci-cd-check]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set yarn cache
        run: yarn config set cache-folder ${{env.YARN_CACHE}}
      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{env.NODEJS}}
      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: yarn
        with:
          path: ${{env.YARN_CACHE}}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install semantic-release dependencies
        run: yarn install --frozen-lockfile
      - name: Build package
        run: yarn build
      - name: Release
        run: yarn semantic-release
      
